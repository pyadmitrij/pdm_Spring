<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/security
  http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<global-method-security pre-post-annotations="enabled" />

<http auto-config="true" use-expressions="true">
		
	<intercept-url pattern="/" access="permitAll" />
	<intercept-url pattern="/user" access="hasAnyRole('user')"/>
	<intercept-url pattern="/add_post" access="hasAnyRole('user')"/>
	<intercept-url pattern="/all**" access="hasAnyRole('user')"/>
	
	<logout logout-success-url="/" />
	<form-login login-processing-url="/static/j_spring_security_check" login-page="/" />
		
</http>

<authentication-manager>
<authentication-provider>
<jdbc-user-service data-source-ref="dataSource"
users-by-username-query="select email, password, true from users where email = ?"
authorities-by-username-query="select email, roles.name from roles inner join ((
select email, role_id from users where email = ?) as t1) using(role_id);" />
</authentication-provider>
</authentication-manager>	

<!-- authorities-by-username-query="select email, password from users where email = ?" /> -->

</beans:beans>